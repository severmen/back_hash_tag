import telebot
import pymongo
from telebot import types
import django
import os
from PIL import Image
#–æ–ø–æ–≤–µ—â–µ–Ω–∏—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "project.settings")
django.setup()

from city_departments.models import *

db_client = pymongo.MongoClient(host='localhost',
                                port=27000,
                                username= 'root',
                                password= 'example')

current_DB = db_client["hack_tag"]

collection_mongoDB = current_DB["public_alerts"]


client = telebot.TeleBot("2029631507:AAEwRx6qqVgaISvXtrq2EjPNu61cBG8AGkI")

def system_setings_user_answer(message):
    if message.text == "üîá–û—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç —Å–µ—Ä–≤–∏—Å–∞":
        client.send_message(message.chat.id,"–í—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã –æ—Ç —Å–µ—Ä–≤–∏—Å–∞") 
        collection_mongoDB.remove({"telegram_id":str(message.chat.id)})
    aplications(message)
    #send_header_informations(message)
      
def send_header_informations(message):
    rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
    rmk.add(types.KeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å –≤–æ–ª–æ–Ω—Ç—ë—Ä–∞"), 
        types.KeyboardButton("‚öôÔ∏è–°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏") )
    rmk.add(types.KeyboardButton("üì¢–°–æ–æ–±—â–µ—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ"))
    rmk.add(types.KeyboardButton('üè≠ –í—ã–∑–≤–∞—Ç—å –º–∞—Å—Ç–µ—Ä–∞ –∏–∑ –£–ø—Ä–∞–≤–ª—è—é—â–µ–π –ö–æ–º–ø–∞–Ω–∏–∏'))
    rmk.add(types.KeyboardButton("üí∞–ü—Ä–æ—á–∏–µ —É—Å–ª—É–≥–∏"))



    message_text = "–í —Å–ª—É—á–∞–µ –∫–∞–∫–æ–π –ª–∏–±–æ –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä—è–º –≤–∞–º —Å—Ä–∞–∂—É –∂–µ –ø—Ä–∏–¥—ë—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ —ç—Ç–æ –∫–∞—Å–∞–µ—Ç—å—Å—è –≤–∞—à–µ–≥–æ –º–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞"
    
    return client.send_message(message.chat.id,message_text, reply_markup=rmk) 

@client.message_handler(content_types=['text'])
def aplications(message):
    if collection_mongoDB.count_documents({"telegram_id":str(message.chat.id)}) == 0:
        markup = types.ReplyKeyboardRemove(selective=False)
        message_text = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤ —Å–∏—Å—Ç–µ–º–µ üòï, –Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–æ —Å–ª–µ–¥—É—é—â–µ–π —Å—Å—ã–ª–∫–µ http://rostelecom.com/ üòÑ"
        client.send_message(message.chat.id, message_text, reply_markup=markup)
    else:
        msg = send_header_informations(message)
        client.register_next_step_handler(msg, user_answer)

def user_answer(message):
    # markup = types.ReplyKeyboardRemove(selective = False)
    message_text = "–î–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ :)"
    if message.text == "üè≠ –í—ã–∑–≤–∞—Ç—å –º–∞—Å—Ç–µ—Ä–∞ –∏–∑ –£–ø—Ä–∞–≤–ª—è—é—â–µ–π –ö–æ–º–ø–∞–Ω–∏–∏":
        msg = client.send_message(message.chat.id, message_text)
    elif message.text == "‚öôÔ∏è–°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("üîá–û—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç —Å–µ—Ä–≤–∏—Å–∞"),
            types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é") )
        message_text = "–í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ —Ç—ã –º–æ–∂–µ—à—å –∏–∑–º–µ–Ω—è—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–ª—å–Ω—ã–µ –ø–∞—Ä–º–µ—Ç—Ä—ã —Å–µ—Ä–≤–∏—Å–∞"
        msg = client.send_message(message.chat.id, message_text , reply_markup=markup)
        client.register_next_step_handler(msg, system_setings_user_answer)
    elif message.text == "üì¢–°–æ–æ–±—â–µ—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")) 
        message_text = "–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–¥–Ω–æ –≤–∏–¥–µ–æ –∏ –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, y–Ω–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å—Å"
        msg = client.send_message(message.chat.id, message_text, reply_markup=markup)
        client.register_next_step_handler(msg, new_event)
    elif message.text == "–ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å –≤–æ–ª–æ–Ω—Ç—ë—Ä–∞":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")) 
        message_text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å"
        msg = client.send_message(message.chat.id, message_text, reply_markup=markup)
        help_informations = {
            'name':'',
            'situation':'',
            'adress':'',
        }
        client.register_next_step_handler(msg, need_volunteer_cheack_full_name, help_informations)
    elif message.text == "üí∞–ü—Ä–æ—á–∏–µ —É—Å–ª—É–≥–∏":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ"))
        markup.add(types.KeyboardButton("–í—ã–∑–æ–≤ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞"))
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

        message_text = "–í–µ–±—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —É—Å–ª—É–≥—É"
        msg = client.send_message(message.chat.id, message_text, reply_markup=markup)
        client.register_next_step_handler(msg, service_verification)
    else:        
        aplications(message)
def new_event(message):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        aplications(message)
    else:
        # chat_id = message.chat.id
        #
        # file_info = client.get_file(message.document.file_id)
        # downloaded_file = client.download_file(file_info.file_path)
        #
        # src = '/' + message.document.file_name;
        # with open(src, 'wb') as new_file:
        #     new_file.write(downloaded_file)
        #
        # client.reply_to(message, "–ü–æ–∂–∞–ª—É–π, —è —Å–æ—Ö—Ä–∞–Ω—é —ç—Ç–æ")
        # img = client.get_file(message.photo[-1].file_id)
        # a = client.download_file(img.file_path)
        # src = filepath + message.photo[0].file_id
        # with open(src, 'wb') as new_file:
        #     new_file.write(downloaded_file)
        new_message = HumanMessage(message = message.text)

        new_message.save()
        message_text ="–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º—ã —Ä–∞—Å–º–æ—Ç—Ä–∏–º –µ–≥–æ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è"
        msg = client.send_message(message.chat.id, message_text)
        aplications(message)
def service_verification(message):
    message_text = "–î–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ :)"
    if message.text == "–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ":
        client.send_message(message.chat.id, "https://www.alfastrah.ru/individuals/?tag=MI_VZR_RUS&utm_source=yandex&utm_medium=cpc&utm_campaign=mi_ALS_VZR_BRAND_BROAD_Y_S_DM_RUS_yxprvzr&utm_content=pid%7C31126135170%7Crid%7C%7Ccid%7C60840897%7Cgid%7C4535608007%7Caid%7C10600196441%7Cadp%7Cno%7Cpos%7Cpremium1%7Csrc%7Csearch_none%7Cdvc%7Cdesktop%7Ccoef%7C0%7Cregion_name%7C–£–ª—å—è–Ω–æ–≤—Å–∫%7Cregion_id%7C195&utm_term=–∞–ª—å—Ñ–∞—Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ&yclid=5965507027731014006")
    elif message.text == "–í—ã–∑–æ–≤ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–ì–∞–∑–æ–≤—â–∏–∫"))
        markup.add(types.KeyboardButton("–≠–ª–µ–∫—Ç—Ä–∏–∫"))
        markup.add(types.KeyboardButton("–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫"))
        msg = client.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å", reply_markup=markup)
        client.register_next_step_handler(msg,cheack_profile)
    else:
        aplications(message)

def cheack_profile(message):
    client.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º https://profi.ru/")
    aplications(message)

def need_volunteer_cheack_full_name(message,help_informations ):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        aplications(message)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
        message_text =  message.text + " –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é"
        help_informations['name'] = message.text
        msg = client.send_message(message.chat.id, message_text, reply_markup=markup)
        client.register_next_step_handler(msg, need_volunteer_cheack_situation, help_informations)
def need_volunteer_cheack_situation(message, help_informations):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        aplications(message)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")) 
        message_text = "–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å—Å"
        msg = client.send_message(message.chat.id, message_text, reply_markup=markup)
        help_informations['situation'] = message.text
        client.register_next_step_handler(msg, need_volunteer_cheack_adress, help_informations)
    
def need_volunteer_cheack_adress(message, help_informations):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        aplications(message)
    else:
        help_informations['adress']
        message_text = "–°–ø–∞—Å–∏–±–æ –≤–æ–ª–æ–Ω—Ç—ë—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è"
        msg = client.send_message(message.chat.id, message_text)
        aplications(message)
client.polling(none_stop=True, interval=0)